<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.example.project.demos.web.dao.RawMaterialOutboundDao">

	<!-- 可根据自己的需求，是否要使用 -->
    <resultMap type="com.example.project.demos.web.entity.RawMaterialOutboundEntity" id="rawMaterialOutboundMap">
        <result property="id" column="id"/>
        <result property="materialCode" column="material_code"/>
        <result property="unitPrice" column="unit_price"/>
        <result property="count" column="count"/>
        <result property="tollAmount" column="toll_amount"/>
        <result property="outCode" column="out_code"/>
        <result property="receiver" column="receiver"/>
        <result property="receiveTime" column="receive_time"/>
        <result property="billNo" column="bill_no"/>
        <result property="approveState" column="approve_state"/>
        <result property="billState" column="bill_state"/>
        <result property="createBy" column="create_by"/>
        <result property="createTime" column="create_time"/>
        <result property="updateBy" column="update_by"/>
        <result property="updateTime" column="update_time"/>
        <result property="remark" column="remark"/>
    </resultMap>

    <select id="selectRawMaterialOutboundInfoListByPage" resultType="com.example.project.demos.web.dto.list.RawMaterialOutboundInfo">
        SELECT
        t.id,
        t.material_code,
        m.name as materialName,
        m.model,
        d2.dict_value modelName,
        m.unit,
        d3.dict_value unitName,
        t.unit_price,
        t.count,
        t.toll_amount ,
        t.out_code,
        t.receiver,
        u2.user_name AS receiverName,
        t.receive_time,
        t.bill_no,
        t.bill_state,
        s.name as supplyerName,
        t.create_by,
        u.user_name AS createByName,
        t.create_time,
        t.update_by,
        u1.user_name AS updateByName,
        t.update_time,
        t.remark
        FROM	raw_material_outbound t
        LEFT JOIN sys_user u ON u.user_login = t.create_by
        LEFT JOIN sys_user u1 ON u1.user_login = t.update_by
        LEFT JOIN sys_user u2 ON u2.user_login = t.receiver
        left join material_info  m  on  m.code = t.material_code
        left join customer_supply s on s.code = m.supplyer_code
        LEFT JOIN sys_dict_data d2 ON d2.dict_code = m.model and  d2.dict_type = 'material_model'
        LEFT JOIN sys_dict_data d3 ON d3.dict_code = m.unit and  d3.dict_type = 'material_unit'
        where 1=1
        <if test="raw.materialCode != null and raw.materialCode != ''">
            and t.material_code    like concat('%', #{raw.materialCode}, '%')
        </if>
        <if test="raw.materialName != null and raw.materialName != ''">
            and m.name    like concat('%', #{raw.materialName}, '%')
        </if>
        <if test="raw.supplyerName != null and raw.supplyerName != ''">
            and s.name    like concat('%', #{raw.supplyerName}, '%')
        </if>
        <if test="raw.billNo != null and raw.billNo != ''">
            and t.bill_no    like concat('%', #{raw.billNo}, '%')
        </if>
        order  by  t.id
        limit #{pageable.offset}, #{pageable.pageSize}
    </select>

    <select id="count" resultType="java.lang.Integer">
        SELECT count(1)   FROM	raw_material_outbound t
        left join material_info  m  on  m.code = t.material_code
        left join customer_supply s on s.code = m.supplyer_code
        where 1=1
        <if test="materialCode != null and materialCode != ''">
            and t.material_code    like concat('%', #{materialCode}, '%')
        </if>
        <if test="materialName != null and materialName != ''">
            and m.name    like concat('%', #{materialName}, '%')
        </if>
        <if test="supplyerName != null and supplyerName != ''">
            and s.name    like concat('%', #{supplyerName}, '%')
        </if>
        <if test="billNo != null and billNo != ''">
            and t.bill_no    like concat('%', #{billNo}, '%')
        </if>
    </select>

    <select id="selectRawMaterialOutboundInfoById" resultType="com.example.project.demos.web.dto.list.RawMaterialOutboundInfo">
        SELECT
            t.id,
            t.material_code,
            m.name as materialName,
            m.model,
            d2.dict_value modelName,
            m.unit,
            d3.dict_value unitName,
            t.unit_price,
            t.count,
            t.toll_amount ,
            t.out_code,
            t.receiver,
            u2.user_name AS receiverName,
            t.receive_time,
            t.bill_no,
            t.bill_state,
            s.name as supplyerName,
            t.create_by,
            u.user_name AS createByName,
            t.create_time,
            t.update_by,
            u1.user_name AS updateByName,
            t.update_time,
            t.remark
        FROM	raw_material_outbound t
                    LEFT JOIN sys_user u ON u.user_login = t.create_by
                    LEFT JOIN sys_user u1 ON u1.user_login = t.update_by
                    LEFT JOIN sys_user u2 ON u2.user_login = t.receiver
                    left join material_info  m  on  m.code = t.material_code
                    left join customer_supply s on s.code = m.supplyer_code
                    LEFT JOIN sys_dict_data d2 ON d2.dict_code = m.model and  d2.dict_type = 'material_model'
                    LEFT JOIN sys_dict_data d3 ON d3.dict_code = m.unit and  d3.dict_type = 'material_unit'
        where  t.id = #{id}
    </select>


</mapper>